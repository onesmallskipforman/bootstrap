#!/bin/zsh

function bigprint() {
  echo ""
  echo "-------------------------------------------------------------------"
  echo "$1"
  echo "-------------------------------------------------------------------"
  echo ""
}

DIR=$(dirname $0)

function runDots() {
  # Ask for the administrator password upfront
  sudo -v

  # Keep-alive: update existing `sudo` time stamp until the script has finished
  while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

  # Run sections based on command line arguments
  for ARG in "$@"; do
    [ $ARG = "bootstrap"   ] || [ $ARG = "all" ] && \
      bigprint "Syncing the dotfiles repo to home" && \
      $DIR/bootstrap -f
    [ $ARG = "osxprep"     ] || [ $ARG = "all" ] && \
      bigprint "Updating OSX and installing Xcode command line tools" && \
      $DIR/Scripts/osxprep
    [ $ARG = "packages"    ] || [ $ARG = "all" ] && \
      bigprint "Installing Packages (Homebrew, Cask, Mas, Pip)." && \
      $DIR/Scripts/Install/packages

    [ $ARG = "dmenu"       ] || [ $ARG = "all" ] && \
      bigprint "Installing dmenu-mac" && \
      $DIR/Scripts/Install/dmenu
    [ $ARG = "kitty"       ] || [ $ARG = "all" ] && \
      bigprint "Setting Up Kitty Themes" && \
      $DIR/Scripts/Install/kitty_themes
    [ $ARG = "refind"      ] || [ $ARG = "all" ] && \
      bigprint "Setting Up rEFInd" && \
      $DIR/Scripts/Install/refind
    [ $ARG = "termpdf"     ] || [ $ARG = "all" ] && \
      bigprint "Installing Termpdf" && \
      $DIR/Scripts/Install/termpdf
    [ $ARG = "yabai"       ] || [ $ARG = "all" ] && \
      bigprint "Setting Up Yabai Scripting Addon" && \
      $DIR/Scripts/Install/yabai_sa
    [ $ARG = "dock"        ] || [ $ARG = "all" ] && \
      bigprint "Configuring Dock" && \
      $DIR/Scripts/Config/dock
    [ $ARG = "docker"      ] || [ $ARG = "all" ] && \
      bigprint "Sign In To Docker Account" && \
      $DIR/Scripts/Config/docker
    [ $ARG = "osx"         ] || [ $ARG = "all" ] && \
      bigprint"Configuring OSX" && \
      $DIR/Scripts/Config/osx
    [ $ARG = "xdg"         ] || [ $ARG = "all" ] && \
      bigprint "Linking XDG Files" && \
      $DIR/Scripts/Config/xdg
    [ $ARG = "editor"      ] || [ $ARG = "all" ] && \
      bigprint "Setting Up Text Editor Packages" && \
      $DIR/Scripts/Install/editors
    [ $ARG = "mathematica" ] || [ $ARG = "all" ] && \
      bigprint "Installing Mathematica"
      # $DIR/Scripts/Install/Mathematica/mathematica
    [ $ARG = "matlab"      ] || [ $ARG = "all" ] && \
      bigprint "Installing Matlab"
      # $DIR/Scripts/Install/Matlab/matlab
  done
  bigprint "Completed running dots. Please resart your computer."
}

# read -p "This may overwrite existing files in your home DIRectory. Are you sure? (y/n) " -n 1;
# echo "";
printf '%s ' "This may overwrite existing files in ~/. Are you sure? (y/n)";
read REPLY;

if [[ $REPLY =~ ^[Yy]$ ]]; then
    runDots "$@"
fi;

unset runDots;
