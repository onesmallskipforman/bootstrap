you might want to use the firefox model for app dotfiles. if apps delete and replaces files
regularly, you dont have to worry about broken symlinks.


check that git pull does not break firefox

standardize where apps are quit or killed

initializing dropbox
Mathstuffs:
  maybe provide means for downloading zip without isntalling matlab (check brew cask behavior)
  if user and pass arent provided, prompt user, or at least tell them a file is required


Test Terminal Theme Changes, make sure it can handle your changing it manually?
move git credentials to way dev-setup has it

manage apps that start at startup: f.lux, nord, steam, dropbox (check plist files and application support)



  cracking the coding interview
  zsh customization
  tiling window
  minimalist word processor
  minimalist csv editor
  document/pdf viewer
  pass/bitwarden




Next Hurdles:
  syncing across operating systems
  grand final plan:
    giant json file tracking all settings including defaults
    scripts run based on json settings (with defaults)
    backup, restore, and syncing of settings:
      keep symlink to defaults files and use that to update the grand json file
    easier: keep defaults plist files, and have defaults files read from those plists
    idk this is

  concerns:
    enough space for dropbox
    trying to use the same dropbox across different OSs might be a problem (we can figure this out later)

  homebrew utils stuff
  go through mathias, donnen, and awesome-macos-command-line osx defaults














OSX:
  try some defaults but with performing killall after
  figure out which killalls you need
  see if you can get rid of osa script nonsense
  terminal, safari, finder, dock, mail, ui/ux, etc

Later:
  check safariplist issue on mathias' page
  go through mackup to figure out what else you can backup
  Add customizations along the way: zsh, keymap, vim, tmux, window manager, aliases, paths, exports, custom functions, bitwarden/pass, etc
  Move Backup/Restore To Some Syncing Protocol (just keep settings synced and use github to backup and restore [have script run on each git push/pull that requires plugin list to update])
  Use Virtualenvs for Pip Instead of Global
  Move Terminal, Dock, into OSX. These are all part of the out-of-the-box toolset (think vscode organization)
  handling dependencies (ttab in terminal, dockutil in dock, homebrew for ... everything lol)
  list what installs i have and why
  after all of the above, reorganize
  configure launchpad
  reconsider how scripts wait for iterm and matlab


Backup/Restore Plan:
  Sync With Cloud
  Also Be Connected To git repo and push/pull to update/revert/etc settings, AND YOULL HAVE A HISTORY
  test to see if performance is an issue when things are on the cloud:
    alternative if poor performance: multiple git repos for same directory (probably wont be an issue)
  sublime: run some jq whatever to sync pretty settings and normal settings, and then git push the pretty settings
    put new settings at the end


















options:
  installing
  cleaning up
  uninstalling
  saving current state as backup
  configuring current state while leaving extra stuff


push and then split up backup/restore stuff




separate settings config with backup/restore project




Things You Have To Do Manually:
  Change Key Repeat



handle all requirements in the stager
